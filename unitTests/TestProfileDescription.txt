***********************************
*                                 *
* Test Profile Format Description *
*                                 *
***********************************

The text files found in the testing_profiles directory are known as test profiles. Each
test profile contains information to structure a set of unit tests for a specific model.
Each entry is interpreted in the order that it is found. Note that any line beginning with
a '#' character or is empty will be skipped during processing.

The file format is thus:

<Test Label>
<solution prefix>
<control file>
<result comparator>
<input generator>
<input generator>
    .
	.
	.
<input generator>


Key:
	<Test Label>:        This is the label used in the final report for the profile's tests.
	<solution prefix>:   The name of the directory in result_keys where the solution files
	                     are found, and the prefix used for each solution file.
	<control file>:      The path to the control file with test_models as root. The .omec
	                     extension of the control file should be omitted from this entry.
	<result comparator>: Entry for the comparator used; presently there is only one entry per
	                     test profile. See the section "Result Comparators", for a list of 
						 acceptable entries.
	<input generator>:   Identifier for input generator to be applied to the specified model 
	                     component. One or more entries are acceptable. See the section  
						 "Input Generators" for a list of acceptable entries.
						 
						 
Result Generators:
	simpleFloat,<% deviation>: 
		compare two float values, and pass the test if the relative difference between the two 
		values is less than or equal to <% deviation>. Set <% deviation> to 0 to require 
		absolute equality.

Input Generators:
	single,<field label>,<value>
		A single constant value that does not change throughout the unit testing.
		
	simpleSet,<field_label>,<val 1>,<val 2>,...,<val n>
		A set of values to be iterated through; every argument after <field_label> will be
		considered part of the set to be evaluated.
		
	uniRange,<field label>,<start value>,<end value>,<increment>
		Iterate through a uniform range, starting at <start value>, ending with <end value>,
		and incrementing at each step with <increment>
